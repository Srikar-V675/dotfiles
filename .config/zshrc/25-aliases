# -----------------------------------------------------
# ALIASES
# -----------------------------------------------------

# -----------------------------------------------------
# General
# -----------------------------------------------------

# Aliases
alias cl='clear'
[ -s ~/.luaver/luaver ] && . ~/.luaver/luaver

alias nv='nvim'
alias update='sudo pacman -Syu'

# Functions
create() {
    python -m venv "$1"
}

activate() {
    source "$1/bin/activate"
}

habits() {
	echo "

   __ __     __   _ __    ______             __          
  / // /__ _/ /  (_) /_  /_  __/______ _____/ /_____ ____
 / _  / _ \`/ _ \/ / __/   / / / __/ _ \`/ __/  '_/ -_) __/
/_//_/\_,_/_.__/_/\__/   /_/ /_/  \_,_/\__/_/\_\\__/_/   
                                                         
"
    case "$1" in
        log)
            # Navigate to the script directory
            HABIT_DIR=~/Documents/scripts/habits
            if [[ -d "$HABIT_DIR" ]]; then
                cd "$HABIT_DIR" || { echo "Failed to navigate to $HABIT_DIR"; return 1; }
                
                # Run Python from virtual environment if available
                if [[ -f ".venv/bin/python" ]]; then
                    .venv/bin/python habit-tracker-cli.py --log
                else
                    echo "Virtual environment not found."
                fi
            else
                echo "Error: Directory $HABIT_DIR does not exist."
                return 1
            fi
            ;;
        
        stats)
            HABIT_DIR=~/Documents/scripts/habits
            if [[ -d "$HABIT_DIR" ]]; then
                cd "$HABIT_DIR" || { echo "Failed to navigate to $HABIT_DIR"; return 1; }
                if [[ -f ".venv/bin/python" ]]; then
                    .venv/bin/python habit-tracker-cli.py --stats
                else
                    echo "Virtual environment not found."
                fi
            else
                echo "Error: Directory $HABIT_DIR does not exist."
                return 1
            fi
            ;;
        
        *)
            echo "Usage: habits {log|stats}"
            return 1
            ;;
    esac
}


scrolls() {
    case "$1" in
        sync)
            # Command to execute when 'scrolls sync' is run
            echo "Executing sync command..."
            # Replace the line below with your actual sync command      
            cd ~/Documents/scrolls && npx quartz sync --no-pull
            ;;
        nv)
            # Command to execute when 'scrolls nv' is run
            echo "Opening scrolls nvim..."
            # Replace the line below with your actual nv command
            cd ~/Documents/scrolls/content && nv
            ;;
        *)
            echo "Usage: scrolls {sync|nv}"
            ;;
    esac
}

alias ff='fastfetch'
alias ls='eza -a --icons=always'
alias ll='eza -al --icons=always'
alias lt='eza -a --tree --level=1 --icons=always'
alias shutdown='systemctl poweroff'
alias v='$EDITOR'
alias vim='$EDITOR'
alias ts='~/.config/ml4w/scripts/snapshot.sh'
alias wifi='nmtui'
alias cleanup='~/.config/ml4w/scripts/cleanup.sh'

# -----------------------------------------------------
# ML4W Apps
# -----------------------------------------------------
alias ml4w='flatpak run com.ml4w.welcome'
alias ml4w-settings='flatpak run com.ml4w.settings'
alias ml4w-calendar='flatpak run com.ml4w.calendar'
alias ml4w-hyprland='com.ml4w.hyprland.settings'
alias ml4w-sidebar='flatpak run com.ml4w.sidebar'
alias ml4w-options='ml4w-hyprland-setup -m options'
alias ml4w-sidebar='ags toggle sidebar'
alias ml4w-diagnosis='~/.config/hypr/scripts/diagnosis.sh'
alias ml4w-hyprland-diagnosis='~/.config/hypr/scripts/diagnosis.sh'
alias ml4w-qtile-diagnosis='~/.config/ml4w/qtile/scripts/diagnosis.sh'
alias ml4w-update='~/.config/ml4w/update.sh'

# -----------------------------------------------------
# Window Managers
# -----------------------------------------------------

alias Qtile='startx'
# Hyprland with Hyprland

# -----------------------------------------------------
# Scripts
# -----------------------------------------------------
alias ascii='~/.config/ml4w/scripts/figlet.sh'

# -----------------------------------------------------
# System
# -----------------------------------------------------
alias update-grub='sudo grub-mkconfig -o /boot/grub/grub.cfg'

# -----------------------------------------------------
# Qtile
# -----------------------------------------------------
alias res1='xrandr --output DisplayPort-0 --mode 2560x1440 --rate 120'
alias res2='xrandr --output DisplayPort-0 --mode 1920x1080 --rate 120'
alias setkb='setxkbmap de;echo "Keyboard set back to de."'
